'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.235
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

' 
' This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
' 

Imports Microsoft.VisualBasic
	Imports System.Runtime.Serialization
Namespace RichEditMVVMScenarioSL.CarInfoServiceReference


	<System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"), System.Runtime.Serialization.DataContractAttribute(Name:="CarInfo", Namespace:="http://schemas.datacontract.org/2004/07/")> _
	Partial Public Class CarInfo
		Inherits Object
		Implements System.ComponentModel.INotifyPropertyChanged

		Private DescriptionField As String

		Private NameField As String

		<System.Runtime.Serialization.DataMemberAttribute()> _
		Public Property Description() As String
			Get
				Return Me.DescriptionField
			End Get
			Set(ByVal value As String)
				If (Object.ReferenceEquals(Me.DescriptionField, value) <> True) Then
					Me.DescriptionField = value
					Me.RaisePropertyChanged("Description")
				End If
			End Set
		End Property

		<System.Runtime.Serialization.DataMemberAttribute()> _
		Public Property Name() As String
			Get
				Return Me.NameField
			End Get
			Set(ByVal value As String)
				If (Object.ReferenceEquals(Me.NameField, value) <> True) Then
					Me.NameField = value
					Me.RaisePropertyChanged("Name")
				End If
			End Set
		End Property

		Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

		Protected Sub RaisePropertyChanged(ByVal propertyName As String)
			Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
			If (PropertyChangedEvent IsNot Nothing) Then
				PropertyChangedEvent(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class

	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), System.ServiceModel.ServiceContractAttribute(ConfigurationName:="CarInfoServiceReference.ICarInfoService")> _
	Public Interface ICarInfoService

		<System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/ICarInfoService/LoadCarInfo", ReplyAction:="http://tempuri.org/ICarInfoService/LoadCarInfoResponse")> _
		Function BeginLoadCarInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

		Function EndLoadCarInfo(ByVal result As System.IAsyncResult) As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo

		<System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/ICarInfoService/SaveCarInfo", ReplyAction:="http://tempuri.org/ICarInfoService/SaveCarInfoResponse")> _
		Function BeginSaveCarInfo(ByVal carInfo As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

		Sub EndSaveCarInfo(ByVal result As System.IAsyncResult)
	End Interface

	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")> _
	Public Interface ICarInfoServiceChannel
	Inherits RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService, System.ServiceModel.IClientChannel
	End Interface

	<System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")> _
	Partial Public Class LoadCarInfoCompletedEventArgs
		Inherits System.ComponentModel.AsyncCompletedEventArgs

		Private results() As Object

		Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
			MyBase.New(exception, cancelled, userState)
			Me.results = results
		End Sub

		Public ReadOnly Property Result() As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo
			Get
				MyBase.RaiseExceptionIfNecessary()
				Return (CType(Me.results(0), RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo))
			End Get
		End Property
	End Class

	<System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")> _
	Partial Public Class CarInfoServiceClient
		Inherits System.ServiceModel.ClientBase(Of RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService)
		Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService

		Private onBeginLoadCarInfoDelegate As BeginOperationDelegate

		Private onEndLoadCarInfoDelegate As EndOperationDelegate

		Private onLoadCarInfoCompletedDelegate As System.Threading.SendOrPostCallback

		Private onBeginSaveCarInfoDelegate As BeginOperationDelegate

		Private onEndSaveCarInfoDelegate As EndOperationDelegate

		Private onSaveCarInfoCompletedDelegate As System.Threading.SendOrPostCallback

		Private onBeginOpenDelegate As BeginOperationDelegate

		Private onEndOpenDelegate As EndOperationDelegate

		Private onOpenCompletedDelegate As System.Threading.SendOrPostCallback

		Private onBeginCloseDelegate As BeginOperationDelegate

		Private onEndCloseDelegate As EndOperationDelegate

		Private onCloseCompletedDelegate As System.Threading.SendOrPostCallback

		Public Sub New()
		End Sub

		Public Sub New(ByVal endpointConfigurationName As String)
			MyBase.New(endpointConfigurationName)
		End Sub

		Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
			MyBase.New(endpointConfigurationName, remoteAddress)
		End Sub

		Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
			MyBase.New(endpointConfigurationName, remoteAddress)
		End Sub

		Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
			MyBase.New(binding, remoteAddress)
		End Sub

		Public Property CookieContainer() As System.Net.CookieContainer
			Get
				Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)()
				If (httpCookieContainerManager IsNot Nothing) Then
					Return httpCookieContainerManager.CookieContainer
				Else
					Return Nothing
				End If
			End Get
			Set(ByVal value As System.Net.CookieContainer)
				Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)()
				If (httpCookieContainerManager IsNot Nothing) Then
					httpCookieContainerManager.CookieContainer = value
				Else
					Throw New System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" & "ookieContainerBindingElement.")
				End If
			End Set
		End Property

		Public Event LoadCarInfoCompleted As System.EventHandler(Of LoadCarInfoCompletedEventArgs)

		Public Event SaveCarInfoCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)

		Public Event OpenCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)

		Public Event CloseCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)

		<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
		Private Function BeginLoadCarInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService.BeginLoadCarInfo
			Return MyBase.Channel.BeginLoadCarInfo(callback, asyncState)
		End Function

		<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
		Private Function EndLoadCarInfo(ByVal result As System.IAsyncResult) As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService.EndLoadCarInfo
			Return MyBase.Channel.EndLoadCarInfo(result)
		End Function

		Private Function OnBeginLoadCarInfo(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return (CType(Me, RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService)).BeginLoadCarInfo(callback, asyncState)
		End Function

		Private Function OnEndLoadCarInfo(ByVal result As System.IAsyncResult) As Object()
			Dim retVal As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo = (CType(Me, RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService)).EndLoadCarInfo(result)
			Return New Object() { retVal}
		End Function

		Private Sub OnLoadCarInfoCompleted(ByVal state As Object)
			If (Me.LoadCarInfoCompletedEvent IsNot Nothing) Then
				Dim e As InvokeAsyncCompletedEventArgs = (CType(state, InvokeAsyncCompletedEventArgs))
				RaiseEvent LoadCarInfoCompleted(Me, New LoadCarInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
			End If
		End Sub

		Public Sub LoadCarInfoAsync()
			Me.LoadCarInfoAsync(Nothing)
		End Sub

		Public Sub LoadCarInfoAsync(ByVal userState As Object)
			If (Me.onBeginLoadCarInfoDelegate Is Nothing) Then
				Me.onBeginLoadCarInfoDelegate = New BeginOperationDelegate(AddressOf Me.OnBeginLoadCarInfo)
			End If
			If (Me.onEndLoadCarInfoDelegate Is Nothing) Then
				Me.onEndLoadCarInfoDelegate = New EndOperationDelegate(AddressOf Me.OnEndLoadCarInfo)
			End If
			If (Me.onLoadCarInfoCompletedDelegate Is Nothing) Then
				Me.onLoadCarInfoCompletedDelegate = New System.Threading.SendOrPostCallback(AddressOf Me.OnLoadCarInfoCompleted)
			End If
			MyBase.InvokeAsync(Me.onBeginLoadCarInfoDelegate, Nothing, Me.onEndLoadCarInfoDelegate, Me.onLoadCarInfoCompletedDelegate, userState)
		End Sub

		<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
		Private Function BeginSaveCarInfo(ByVal carInfo As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService.BeginSaveCarInfo
			Return MyBase.Channel.BeginSaveCarInfo(carInfo, callback, asyncState)
		End Function

		<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
		Private Sub EndSaveCarInfo(ByVal result As System.IAsyncResult) Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService.EndSaveCarInfo
			MyBase.Channel.EndSaveCarInfo(result)
		End Sub

		Private Function OnBeginSaveCarInfo(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Dim carInfo As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo = (CType(inValues(0), RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo))
			Return (CType(Me, RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService)).BeginSaveCarInfo(carInfo, callback, asyncState)
		End Function

		Private Function OnEndSaveCarInfo(ByVal result As System.IAsyncResult) As Object()
			CType(Me, RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService).EndSaveCarInfo(result)
			Return Nothing
		End Function

		Private Sub OnSaveCarInfoCompleted(ByVal state As Object)
			If (Me.SaveCarInfoCompletedEvent IsNot Nothing) Then
				Dim e As InvokeAsyncCompletedEventArgs = (CType(state, InvokeAsyncCompletedEventArgs))
				RaiseEvent SaveCarInfoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState))
			End If
		End Sub

		Public Sub SaveCarInfoAsync(ByVal carInfo As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo)
			Me.SaveCarInfoAsync(carInfo, Nothing)
		End Sub

		Public Sub SaveCarInfoAsync(ByVal carInfo As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo, ByVal userState As Object)
			If (Me.onBeginSaveCarInfoDelegate Is Nothing) Then
				Me.onBeginSaveCarInfoDelegate = New BeginOperationDelegate(AddressOf Me.OnBeginSaveCarInfo)
			End If
			If (Me.onEndSaveCarInfoDelegate Is Nothing) Then
				Me.onEndSaveCarInfoDelegate = New EndOperationDelegate(AddressOf Me.OnEndSaveCarInfo)
			End If
			If (Me.onSaveCarInfoCompletedDelegate Is Nothing) Then
				Me.onSaveCarInfoCompletedDelegate = New System.Threading.SendOrPostCallback(AddressOf Me.OnSaveCarInfoCompleted)
			End If
			MyBase.InvokeAsync(Me.onBeginSaveCarInfoDelegate, New Object() { carInfo}, Me.onEndSaveCarInfoDelegate, Me.onSaveCarInfoCompletedDelegate, userState)
		End Sub

		Private Function OnBeginOpen(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return (CType(Me, System.ServiceModel.ICommunicationObject)).BeginOpen(callback, asyncState)
		End Function

		Private Function OnEndOpen(ByVal result As System.IAsyncResult) As Object()
			CType(Me, System.ServiceModel.ICommunicationObject).EndOpen(result)
			Return Nothing
		End Function

		Private Sub OnOpenCompleted(ByVal state As Object)
			If (Me.OpenCompletedEvent IsNot Nothing) Then
				Dim e As InvokeAsyncCompletedEventArgs = (CType(state, InvokeAsyncCompletedEventArgs))
				RaiseEvent OpenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState))
			End If
		End Sub

		Public Sub OpenAsync()
			Me.OpenAsync(Nothing)
		End Sub

		Public Sub OpenAsync(ByVal userState As Object)
			If (Me.onBeginOpenDelegate Is Nothing) Then
				Me.onBeginOpenDelegate = New BeginOperationDelegate(AddressOf Me.OnBeginOpen)
			End If
			If (Me.onEndOpenDelegate Is Nothing) Then
				Me.onEndOpenDelegate = New EndOperationDelegate(AddressOf Me.OnEndOpen)
			End If
			If (Me.onOpenCompletedDelegate Is Nothing) Then
				Me.onOpenCompletedDelegate = New System.Threading.SendOrPostCallback(AddressOf Me.OnOpenCompleted)
			End If
			MyBase.InvokeAsync(Me.onBeginOpenDelegate, Nothing, Me.onEndOpenDelegate, Me.onOpenCompletedDelegate, userState)
		End Sub

		Private Function OnBeginClose(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return (CType(Me, System.ServiceModel.ICommunicationObject)).BeginClose(callback, asyncState)
		End Function

		Private Function OnEndClose(ByVal result As System.IAsyncResult) As Object()
			CType(Me, System.ServiceModel.ICommunicationObject).EndClose(result)
			Return Nothing
		End Function

		Private Sub OnCloseCompleted(ByVal state As Object)
			If (Me.CloseCompletedEvent IsNot Nothing) Then
				Dim e As InvokeAsyncCompletedEventArgs = (CType(state, InvokeAsyncCompletedEventArgs))
				RaiseEvent CloseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState))
			End If
		End Sub

		Public Sub CloseAsync()
			Me.CloseAsync(Nothing)
		End Sub

		Public Sub CloseAsync(ByVal userState As Object)
			If (Me.onBeginCloseDelegate Is Nothing) Then
				Me.onBeginCloseDelegate = New BeginOperationDelegate(AddressOf Me.OnBeginClose)
			End If
			If (Me.onEndCloseDelegate Is Nothing) Then
				Me.onEndCloseDelegate = New EndOperationDelegate(AddressOf Me.OnEndClose)
			End If
			If (Me.onCloseCompletedDelegate Is Nothing) Then
				Me.onCloseCompletedDelegate = New System.Threading.SendOrPostCallback(AddressOf Me.OnCloseCompleted)
			End If
			MyBase.InvokeAsync(Me.onBeginCloseDelegate, Nothing, Me.onEndCloseDelegate, Me.onCloseCompletedDelegate, userState)
		End Sub

		Protected Overrides Function CreateChannel() As RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService
			Return New CarInfoServiceClientChannel(Me)
		End Function

		Private Class CarInfoServiceClientChannel
			Inherits ChannelBase(Of RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService)
			Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService

			Public Sub New(ByVal client As System.ServiceModel.ClientBase(Of RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService))
				MyBase.New(client)
			End Sub

			Public Function BeginLoadCarInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService.BeginLoadCarInfo
				Dim _args(-1) As Object
				Dim _result As System.IAsyncResult = MyBase.BeginInvoke("LoadCarInfo", _args, callback, asyncState)
				Return _result
			End Function

			Public Function EndLoadCarInfo(ByVal result As System.IAsyncResult) As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService.EndLoadCarInfo
				Dim _args(-1) As Object
				Dim _result As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo = (CType(MyBase.EndInvoke("LoadCarInfo", _args, result), RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo))
				Return _result
			End Function

			Public Function BeginSaveCarInfo(ByVal carInfo As RichEditMVVMScenarioSL.CarInfoServiceReference.CarInfo, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService.BeginSaveCarInfo
				Dim _args(0) As Object
				_args(0) = carInfo
				Dim _result As System.IAsyncResult = MyBase.BeginInvoke("SaveCarInfo", _args, callback, asyncState)
				Return _result
			End Function

			Public Sub EndSaveCarInfo(ByVal result As System.IAsyncResult) Implements RichEditMVVMScenarioSL.CarInfoServiceReference.ICarInfoService.EndSaveCarInfo
				Dim _args(-1) As Object
				MyBase.EndInvoke("SaveCarInfo", _args, result)
			End Sub
		End Class
	End Class
End Namespace
